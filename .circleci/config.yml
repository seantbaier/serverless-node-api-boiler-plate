# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-staging:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm run lint
      - run: env > .env
      - run: npm run build

      #save product of build
      - persist_to_workspace:
          root: .
          paths: .serverless

  deploy-staging:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ls -la
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # apply package from the build step
      - run: env > .env
      - run:
          command: node_modules/.bin/serverless deploy --verbose --stage development --region us-east-1 --package ./.serverless
          environment:
            SLS_DEBUG: '*'

workflows:
  version: 2
  build-and-deploy-staging:
    jobs:
      - build-staging:
          context: buckets-api-stage
          filters:
            branches:
              only: staging
      - deploy-staging:
          context: buckets-api-stage
          requires:
            - build-staging
          filters:
            branches:
              only: staging
